# ---- STAGE 1: Builder ----
FROM node:18-alpine AS builder
WORKDIR /app

# --- Frontend Build (Vite) ---
COPY frontend/package*.json ./frontend/
WORKDIR /app/frontend
RUN npm ci
COPY frontend/ .

# Pass build-time env variables for Vite (must start with VITE_)
ARG VITE_SUPABASE_URL
ARG VITE_SUPABASE_ANON_KEY
ARG VITE_SOCKET_URL
ARG VITE_APP_WS_URL
ARG VITE_API_BASE_URL

# Set them so Vite sees them
ENV VITE_SUPABASE_URL=$VITE_SUPABASE_URL
ENV VITE_SUPABASE_ANON_KEY=$VITE_SUPABASE_ANON_KEY
ENV VITE_SOCKET_URL=$VITE_SOCKET_URL
ENV VITE_APP_WS_URL=$VITE_APP_WS_URL
ENV VITE_API_BASE_URL=$VITE_API_BASE_URL

# Build frontend
RUN npm run build

# --- Backend Build ---
WORKDIR /app/backend
COPY backend/package*.json ./
RUN npm ci --only=production
COPY backend/ ./

# ---- STAGE 2: Production ----
FROM node:18-alpine AS production
WORKDIR /app
ENV NODE_ENV=production

# Copy backend and frontend
COPY --from=builder /app/backend ./ 
COPY --from=builder /app/frontend/dist ./public

# Pass backend env variables to runtime
ENV VITE_SUPABASE_URL=$VITE_SUPABASE_URL
ENV VITE_SUPABASE_ANON_KEY=$VITE_SUPABASE_ANON_KEY
ENV VITE_SOCKET_URL=$VITE_SOCKET_URL
ENV VITE_APP_WS_URL=$VITE_APP_WS_URL
ENV VITE_API_BASE_URL=$VITE_API_BASE_URL

# Non-root user
RUN addgroup -S appgroup && adduser -S appuser -G appgroup && chown -R appuser:appgroup /app
USER appuser

# Expose port
EXPOSE 3000

# Healthcheck
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/health', res => process.exit(res.statusCode === 200 ? 0 : 1))"

# Start backend
CMD ["npm", "start"]
